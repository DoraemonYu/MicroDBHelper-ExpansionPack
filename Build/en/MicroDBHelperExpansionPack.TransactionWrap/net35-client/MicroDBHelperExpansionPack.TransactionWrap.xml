<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MicroDBHelperExpansionPack.TransactionWrap</name>
    </assembly>
    <members>
        <member name="T:MicroDBHelperExpansionPack.Internals.IAssemblyInspectorContext">
            <summary>
            Interface
            </summary>
        </member>
        <member name="T:MicroDBHelperExpansionPack.Internals.AssemblyInspectorContext">
            <summary>
            Main logic to check [MicroDBHelper.dll]
            </summary>
        </member>
        <member name="T:MicroDBHelperExpansionPack.Internals.AssemblyInspector">
            <summary>
            Inspector for checking [MicroDBHelper.dll] is can be loaded successfully
            </summary>
        </member>
        <member name="M:MicroDBHelperExpansionPack.Internals.AssemblyInspector.CheckAssembly">
            <summary>
            Check [MicroDBHelper.dll] is can be loaded successfully
            </summary>
            <returns></returns>
        </member>
        <member name="T:MicroDBHelpers.ExpansionPack.TransactionWrap">
            <summary>
            Wrap for MicroDBTransaction
            </summary>
        </member>
        <member name="F:MicroDBHelpers.ExpansionPack.TransactionWrap.transaction">
            <summary>
            Transaction Object
            </summary>
        </member>
        <member name="P:MicroDBHelpers.ExpansionPack.TransactionWrap.IsolationLevel">
            <summary>
            Level of Isolation (read only)
            </summary>
        </member>
        <member name="P:MicroDBHelpers.ExpansionPack.TransactionWrap.ConnectionAliasName">
            <summary>
            the Alias Name of Connection (read only)
            </summary>
        </member>
        <member name="F:MicroDBHelpers.ExpansionPack.TransactionWrap.IsMainDLLLoadedCorrect">
            <summary>
            Mark the status for MainDLL
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.#ctor(System.Data.IsolationLevel,System.String)">
            <summary>
            Hide default ctor
            </summary>
        </member>
        <member name="P:MicroDBHelpers.ExpansionPack.TransactionWrap.IsDisposed">
            <summary>
            mark as is it disposed now
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.Dispose">
            <summary>
            Dispose resources
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.Finalize">
            <summary>
            destruct
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.op_Implicit(MicroDBHelpers.ExpansionPack.TransactionWrap)~MicroDBHelpers.MicroDBTransaction">
            <summary>
            implicit conversion,  TransactionWrap -> MicroDBTransaction
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.op_Equality(MicroDBHelpers.ExpansionPack.TransactionWrap,MicroDBHelpers.ExpansionPack.TransactionWrap)">
            <summary>
            ==
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.op_Inequality(MicroDBHelpers.ExpansionPack.TransactionWrap,MicroDBHelpers.ExpansionPack.TransactionWrap)">
            <summary>
            !=
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.Equals(System.Object)">
            <summary>
            Equals
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.GetHashCode">
            <summary>
            GetHashCode
            </summary>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.UseTransaction(System.Data.IsolationLevel,System.String)">
            <summary>
            Get new MicroDBTransaction Object with the Transaction support<para />
            ( when transaction is success，call MarkSuccess() method at last，then the transaction will automatically COMMIT; when some exception is happend then case the code NOT to call MarkSuccess() method,  the transaction will automatically Rollback )
            </summary>
            <param name="IsolationLevel">Level of Isolation</param>
            <param name="ConnectionAliasName">the Alias Name of Connection (if not pass name,it will use the DEFAULT name instead.)</param>
        </member>
        <member name="M:MicroDBHelpers.ExpansionPack.TransactionWrap.MarkSuccess">
            <summary>
            Mark this Transaction is Success ( before this MicroDBTransaction END,it will commit; otherwise, it wll rollback  )
            </summary>
        </member>
        <member name="T:System.LinqSearchAlternate">
            <summary>
            Alternate for Linq's Search
            </summary>
        </member>
    </members>
</doc>
